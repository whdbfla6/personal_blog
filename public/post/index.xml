<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on A Hugo website</title>
    <link>/post/</link>
    <description>Recent content in Posts on A Hugo website</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 17 Jun 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>apartment_price_prediction_EDA</title>
      <link>/2020/06/17/apartment-price-prediction-eda/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/06/17/apartment-price-prediction-eda/</guid>
      <description>0. 들어가며이 게시글은 서울 아파트 실거래가 예측 시스템을 구축하는 프로젝트에서 필자가 맡은 EDA파트를 담고 있다
1. 분석을 위한 기본적인 데이터 전처리1) 분석에 용이하도록 object 변수 변환학교 학생수를 숫자형으로 변환area에서 숫자가 아닌 부분 제거’school_addr_town’에서 ~길의 내용을 제거하고 ~로까지 확인한다df[&amp;#39;school_students&amp;#39;] = pd.to_numeric(df[&amp;#39;school_students&amp;#39;])# area에서 숫자가 아닌 부분을 제거해준다 import redf[&amp;#39;area&amp;#39;] = df[&amp;#39;area&amp;#39;].apply(lambda x: int(re.split(&amp;#39;\D&amp;#39;,x)[0]))import redf[&amp;#39;school_addr_town&amp;#39;] = df[&amp;#39;school_addr_town&amp;#39;].apply(lambda x: re.split(&amp;#39;\d&amp;#39;,x)[0])df[&amp;#39;school_addr_town&amp;#39;] = df[&amp;#39;school_addr_town&amp;#39;].</description>
    </item>
    
    <item>
      <title>EDA-profilingTool</title>
      <link>/2020/06/17/eda-profilingtool/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/06/17/eda-profilingtool/</guid>
      <description>1. pandas-profilingpandas profiling은 수많은 양의 데이터에 대한 EDA를 하나의 보고서 형태로 만들어주는 패키지이다설치 방법pip사용pip install pandas-profiling[notebook]github에서 최신 버전 다운로드pip install https://github.com/pandas-profiling/pandas-profiling/archive/master.zipcondaconda install -c conda-forge pandas-profiling코드import pandas_profilingpandas_profiling.ProfileReport(data)결과물을 html로 저장하는 방법profile = ProfileReport(data)profile.to_file(&amp;quot;output.html&amp;quot;)결과물변수별 특징, 결측값, 변수별 상관관계 등에 대한 정보를 하나의 보고서 형태로 출력해준다png</description>
    </item>
    
    <item>
      <title>how to use github</title>
      <link>/2020/06/17/how-to-use-github/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/06/17/how-to-use-github/</guid>
      <description>0. 들어가며이번 데이터사이언스입문 수업을 들으면서 깃험을 처음 접하게 되었다. 코딩을 처음 접하는 초보자들을 위해 깃헙에 대해 소개하고자 한다1. 깃헙이란?깃헙에 대해 알기에 앞서 git이 무엇인지 알아야한다.깃은 버전 관리 시스템으로 같은 파일을 다수의 사람이 동시에 작업하는 것을 가능하도록 하며, 과거에 작성한 코드 확인이 가능하다깃헙은 깃이 포함된 파일들을 원격으로 전송하여 저장되는 사이트이다.2. 깃헙을 이용한 협업1) 저장소원격 저장소중앙 원격 저장소 : 여러명이 관리하는 프로젝트의 중심이 되는 저장소</description>
    </item>
    
    <item>
      <title>S-bike-datavisualization</title>
      <link>/2020/06/17/s-bike-datavisualization/</link>
      <pubDate>Wed, 17 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/06/17/s-bike-datavisualization/</guid>
      <description>주제서울 자전거(따릉이)는누구나 편리하게 사용할 수 있는 무인 자전거 대여 시스템으로, 교통체증과 대기오염의문제를 해결하기 위해 마련되었다. 본인은 서울시 공공자전거 대여소별 반납 건수와 대여 건수를 비교하여 수요를 파악하고자 한다. 이는 해당 대여소의 자전거와 거치대 수의 확대 여부에 대한 의사결정에 도움이 될 것으로 판단된다.데이터서울 열린 데이터 광장 [https://data.seoul.go.kr/] 데이터를 사용하였다.
시각화 내용1. 각 대여소별 2018년6월의 대여 건수와 반납 건수 비교 (2019년자료가없어 최신 데이터를 사용하지 못하였다)서울 열린 데이터 광장에서 제공하고 있는 서울 자전거 관련 공공데이터를이용해 시각화를 진행하였다.</description>
    </item>
    
    <item>
      <title>resume</title>
      <link>/2020/06/05/resume/</link>
      <pubDate>Fri, 05 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>/2020/06/05/resume/</guid>
      <description>html,body,div,span,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,abbr,address,cite,code,del,dfn,em,img,ins,kbd,q,samp,small,strong,sub,sup,var,b,i,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,th,td,article,aside,canvas,details,figcaption,figure,footer,header,hgroup,menu,nav,section,summary,time,mark,audio,video {border:0;font:inherit;font-size:100%;margin:0;padding:0;vertical-align:baseline;}article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section {display:block;}html, body {background: #f7f1f8; font-family: &#39;Lato&#39;, helvetica, arial, sans-serif; font-size: 16px; color: #222;width:100%;height:100%;}.clear {clear: both;}p {font-size: 1em;line-height: 1.4em;margin-bottom: 20px;color: #444;}#cv {width: 100%;max-width: 800px;background: #f3f3f3;margin: 30px auto;}.mainDetails {padding: 25px 35px;border-bottom: 2px solid #cf8a05;background: #ededed;}#name h1 {font-size: 2.</description>
    </item>
    
    <item>
      <title></title>
      <link>/1/01/01/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/1/01/01/</guid>
      <description>학력활동프로젝트수상</description>
    </item>
    
  </channel>
</rss>